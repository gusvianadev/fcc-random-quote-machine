{"version":3,"sources":["styles/Global.styles.js","styles/App.styles.js","components/QuoteBox/QuoteBox.styles.js","components/Button/Button.styles.js","components/Button/Button.jsx","components/QuoteBox/QuoteBox.jsx","App.jsx","index.js"],"names":["GlobalStyles","createGlobalStyle","AppSty","styled","div","color","QuoteBoxSty","opacity","quoteChange","ButtonSty","button","Button","id","content","onClick","QuoteBox","quote","setQuote","useState","getQuote","setGetQuote","useEffect","a","fetch","res","json","data","setTimeout","author","className","href","encodeURIComponent","replaceAll","target","rel","App","colors","setColor","Math","floor","random","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA0BeA,EAxBMC,YAAH,4WCcHC,EAdAC,IAAOC,IAAV,6PAIS,qBAAGC,SACd,qBAAGA,SAIS,qBAAGA,S,+BC4BVC,EArCKH,IAAOC,IAAV,2pBACL,qBAAGG,WAYF,qBAAGC,eAOH,qBAAGA,eAOH,qBAAGA,eCXDC,EAhBGN,IAAOO,OAAV,qP,OCMAC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,QAAhB,OACd,cAAC,EAAD,CAAWF,GAAIA,EAAIE,QAASA,EAA5B,SACED,KCsDYE,EArDE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACTC,oBAAS,GADA,mBAClCC,EADkC,KACxBC,EADwB,KAczC,OAXAC,oBAAS,sBAAC,8BAAAC,EAAA,0DACLH,EADK,gCAEUI,MAAM,kCAFhB,cAEFC,EAFE,gBAGWA,EAAIC,OAHf,OAGFC,EAHE,OAIRC,YAAW,WACVV,EAASS,GACTN,GAAY,KACV,KAPK,2CASP,CAACD,IAGH,eAAC,EAAD,CACCP,GAAG,YACHL,QAASS,EAAQ,EAAI,EACrBR,YAAaW,EAAW,EAAI,EAH7B,UAKC,6BAAYP,GAAG,OAAf,UACC,cAAC,IAAD,CAAaA,GAAG,eACfI,GAASA,EAAMH,WAEjB,sBAAMD,GAAG,SAAT,SAAmBI,GAASA,EAAMY,SAClC,sBAAKhB,GAAG,UAAR,UACC,cAAC,EAAD,CACCC,QACC,mBACCD,GAAG,cACHiB,UAAU,uBACVC,KAAI,wDAAmDC,mBACtDf,GAASA,EAAMY,OAAOI,WAAW,IAAK,KADnC,wBAEaD,mBAChBf,GAASA,EAAMH,UAEhBoB,OAAO,SACPC,IAAI,aATL,SAWC,cAAC,IAAD,QAIH,cAAC,EAAD,CACCtB,GAAG,YACHC,QAAQ,YACRC,QAAS,kBAAMM,GAAY,aCjBjBe,EA7BH,WAAO,IAAD,EACSjB,mBAAS,MADlB,mBACVF,EADU,KACHC,EADG,KAEXmB,EAAS,CACd,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAbgB,EAeSlB,mBAAS,IAflB,mBAeVb,EAfU,KAeHgC,EAfG,KAqBjB,OAJAhB,qBAAU,WACTL,GAASqB,EAASD,EAAOE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAOK,YACzD,CAACzB,IAGH,eAAC,EAAD,CAAQX,MAAOA,EAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAUW,MAAOA,EAAOC,SAAUA,QCzBrCyB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.67888eaa.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n    html {\n        box-sizing: border-box;\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n\n    *, \n    *:before, \n    *:after {\n        box-sizing: inherit;\n    }\n\n    body,\n    #root {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nexport default GlobalStyles;\n","import styled from 'styled-components';\n\nconst AppSty = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tbackground-color: ${({ color }) => color};\n\tcolor: ${({ color }) => color};\n\ttransition: background-color 1s ease;\n\n\t& button {\n\t\tbackground-color: ${({ color }) => color};\n\t\ttransition: background-color 1s ease;\n\t}\n`;\n\nexport default AppSty;\n","import styled from 'styled-components';\n\nconst QuoteBoxSty = styled.div`\n\topacity: ${({ opacity }) => opacity};\n\tmargin: auto;\n\tmax-width: 450px;\n\tbackground-color: white;\n\tborder-radius: 5px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 2rem;\n\ttransition: opacity 1s ease;\n\n\t& #quote-icon {\n\t\tmargin-right: 0.5rem;\n\t\topacity: ${({ quoteChange }) => quoteChange};\n\t\ttransition: opacity 1s ease;\n\t}\n\n\t& #text {\n\t\tfont-size: 1.75em;\n\t\tmargin: 0;\n\t\topacity: ${({ quoteChange }) => quoteChange};\n\t\ttransition: opacity 1s ease;\n\t}\n\n\t& #author {\n\t\tmargin: 1rem 0 1rem auto;\n\t\ttext-transform: capitalize;\n\t\topacity: ${({ quoteChange }) => quoteChange};\n\t\ttransition: opacity 1s ease;\n\t}\n\n\t& #btn-row {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n`;\n\nexport default QuoteBoxSty;\n","import styled from 'styled-components';\n\nconst ButtonSty = styled.button`\n\tborder: none;\n\tborder-radius: 3px;\n\toutline: none;\n\tpadding: 0.6rem;\n\tmargin-right: 0.3rem;\n\tcolor: white;\n\tcursor: pointer;\n\n\t& a {\n\t\tall: unset;\n\t\tdisplay: flex;\n\t\tfont-size: 1.3rem;\n\t}\n`;\n\nexport default ButtonSty;\n","import ButtonSty from './Button.styles';\n\nconst Button = ({ id, content, onClick }) => (\n\t<ButtonSty id={id} onClick={onClick}>\n\t\t{content}\n\t</ButtonSty>\n);\n\nexport default Button;\n","import { useEffect, useState } from 'react';\nimport { FaTwitter, FaQuoteLeft } from 'react-icons/fa';\nimport QuoteBoxSty from './QuoteBox.styles';\nimport Button from '../Button/Button';\n\nconst QuoteBox = ({ quote, setQuote }) => {\n\tconst [getQuote, setGetQuote] = useState(true);\n\n\tuseEffect(async () => {\n\t\tif (getQuote) {\n\t\t\tconst res = await fetch('https://api.quotable.io/random');\n\t\t\tconst data = await res.json();\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetQuote(data);\n\t\t\t\tsetGetQuote(false);\n\t\t\t}, 300);\n\t\t}\n\t}, [getQuote]);\n\n\treturn (\n\t\t<QuoteBoxSty\n\t\t\tid=\"quote-box\"\n\t\t\topacity={quote ? 1 : 0}\n\t\t\tquoteChange={getQuote ? 0 : 1}\n\t\t>\n\t\t\t<blockquote id=\"text\">\n\t\t\t\t<FaQuoteLeft id=\"quote-icon\" />\n\t\t\t\t{quote && quote.content}\n\t\t\t</blockquote>\n\t\t\t<cite id=\"author\">{quote && quote.author}</cite>\n\t\t\t<div id=\"btn-row\">\n\t\t\t\t<Button\n\t\t\t\t\tcontent={\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tid=\"tweet-quote\"\n\t\t\t\t\t\t\tclassName=\"twitter-share-button\"\n\t\t\t\t\t\t\thref={`https://www.twitter.com/intent/tweet?hashtags=${encodeURIComponent(\n\t\t\t\t\t\t\t\tquote && quote.author.replaceAll(' ', '')\n\t\t\t\t\t\t\t)},quotes&text=${encodeURIComponent(\n\t\t\t\t\t\t\t\tquote && quote.content\n\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FaTwitter />\n\t\t\t\t\t\t</a>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tid=\"new-quote\"\n\t\t\t\t\tcontent=\"New quote\"\n\t\t\t\t\tonClick={() => setGetQuote(true)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</QuoteBoxSty>\n\t);\n};\n\nexport default QuoteBox;\n","import { useEffect, useState } from 'react';\nimport GlobalStyles from './styles/Global.styles';\nimport AppSty from './styles/App.styles';\nimport QuoteBox from './components/QuoteBox/QuoteBox';\n\nconst App = () => {\n\tconst [quote, setQuote] = useState(null);\n\tconst colors = [\n\t\t'#16a085',\n\t\t'#27ae60',\n\t\t'#2c3e50',\n\t\t'#f39c12',\n\t\t'#e74c3c',\n\t\t'#9b59b6',\n\t\t'#FB6964',\n\t\t'#342224',\n\t\t'#472E32',\n\t\t'#77B1A9',\n\t\t'#73A857',\n\t];\n\tconst [color, setColor] = useState('');\n\n\tuseEffect(() => {\n\t\tquote && setColor(colors[Math.floor(Math.random() * colors.length)]);\n\t}, [quote]);\n\n\treturn (\n\t\t<AppSty color={color}>\n\t\t\t<GlobalStyles />\n\t\t\t<QuoteBox quote={quote} setQuote={setQuote} />\n\t\t</AppSty>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}